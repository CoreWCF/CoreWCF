name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [main, opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install SonarCloud scanner for .NET
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner        

    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.x'

    - name: dotnet restore
      run: dotnet restore src/CoreWCF.sln
    
    - name: Prepare SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: >
          .\.sonar\scanner\dotnet-sonarscanner begin 
          /k:"CoreWCF_CoreWCF" 
          /o:"CoreWCF" 
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" 
          /d:sonar.host.url="https://sonarcloud.io" 
          /d:sonar.cs.vstest.reportsPaths=./TestResults/*.trx 
          /d:sonar.cs.opencover.reportsPaths=./**/coverage.opencover.xml 
          /d:sonar.coverage.exclusions=.src/**/tests/**/*.*
          /d:sonar.verbose=true
        
    - name: dotnet build
      run: dotnet build --no-restore src/CoreWCF.sln

    - run: dotnet test src/CoreWCF.Http/tests/CoreWCF.Http.Tests.csproj --collect:"XPlat Code Coverage" --settings coverlet.runsettings

    - name: Complete SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"