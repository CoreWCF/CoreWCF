# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

strategy:
  matrix:
    Windows_netcore2.1:
      imageName: 'windows-latest'
      targetFramework: 'netcoreapp2.1'
      testArgs: ''
    Windows_netcore3.0:
      imageName: 'windows-latest'
      targetFramework: 'netcoreapp3.0'
      testArgs: ''
    Windows_netfx:
      imageName: 'windows-latest'
      targetFramework: 'net472'
      testArgs: ''
    Linux_netcore2.1:
      imageName: 'ubuntu-latest'
      targetFramework: 'netcoreapp2.1'
      testArgs: '--filter Category!=WindowsOnly'
    Linux_netcore3.0:
      imageName: 'ubuntu-latest'
      targetFramework: 'netcoreapp3.0'
      testArgs: '--filter Category!=WindowsOnly'

pool:
  vmImage: $(imageName)

variables:
#TODO: Add this to the matrix to run Release and Debug
  buildConfiguration: 'Debug'
  solution: 'src/CoreWCF.sln'
  nettcptests: 'src/CoreWCF.NetTcp/tests/CoreWCF.NetTcp.Tests.csproj'
  httptests: 'src/CoreWCF.Http/tests/CoreWCF.Http.Tests.csproj'
  primitivestests: 'src/CoreWCF.Primitives/tests/CoreWCF.Primitives.Tests.csproj'

steps:
# Enable GitVersion after CI builds are working
# - task: GitVersion@4
#   displayName: GitVersion
#   inputs:
#     preferBundledVersion: true

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: Test $(targetFramework)
  timeoutInMinutes: 2
  inputs:
    command: test
    projects: '$(solution)'
    publishTestResults: true
    configuration: $(buildConfiguration)
    nobuild: true
    arguments: '--framework $(targetFramework) $(testArgs)'

# - task: DotNetCoreCLI@2
#   displayName: Pack
#   inputs:
#     command: 'pack'
#     packagesToPack: '$(solution)'
#     nobuild: true
#     versioningScheme: 'byBuildNumber'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
