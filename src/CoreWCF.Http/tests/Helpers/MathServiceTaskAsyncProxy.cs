
namespace Helpers.GeneratedClient
{

    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool.
    //     Runtime Version:4.0.30319.16794
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------



    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "MS.Test.NetFx45.TestCases.ServiceModel.WCF.AsyncNet.OperationContextTests.GeneratedClient.IMathService")]
    public interface IMathService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMathService/Add", ReplyAction = "http://tempuri.org/IMathService/AddResponse")]
        int Add(int x, int y);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMathService/Add", ReplyAction = "http://tempuri.org/IMathService/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int x, int y);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMathService/Multiply", ReplyAction = "http://tempuri.org/IMathService/MultiplyResponse")]
        int Multiply(int x, int y);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMathService/Multiply", ReplyAction = "http://tempuri.org/IMathService/MultiplyResponse")]
        System.Threading.Tasks.Task<int> MultiplyAsync(int x, int y);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMathService/Subtract", ReplyAction = "http://tempuri.org/IMathService/SubtractResponse")]
        int Subtract(int x, int y);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMathService/Subtract", ReplyAction = "http://tempuri.org/IMathService/SubtractResponse")]
        System.Threading.Tasks.Task<int> SubtractAsync(int x, int y);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMathServiceChannel : IMathService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MathServiceClient : System.ServiceModel.ClientBase<IMathService>, IMathService
    {

        public MathServiceClient()
        {
        }

        public MathServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public MathServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public MathServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public MathServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public int Add(int x, int y)
        {
            return base.Channel.Add(x, y);
        }

        public System.Threading.Tasks.Task<int> AddAsync(int x, int y)
        {
            return base.Channel.AddAsync(x, y);
        }

        public int Multiply(int x, int y)
        {
            return base.Channel.Multiply(x, y);
        }

        public System.Threading.Tasks.Task<int> MultiplyAsync(int x, int y)
        {
            return base.Channel.MultiplyAsync(x, y);
        }

        public int Subtract(int x, int y)
        {
            return base.Channel.Subtract(x, y);
        }

        public System.Threading.Tasks.Task<int> SubtractAsync(int x, int y)
        {
            return base.Channel.SubtractAsync(x, y);
        }
    }
}